[1mdiff --git a/src/containers/Survey.jsx b/src/containers/Survey.jsx[m
[1mindex 44bd965..db55eb7 100644[m
[1m--- a/src/containers/Survey.jsx[m
[1m+++ b/src/containers/Survey.jsx[m
[36m@@ -5,15 +5,10 @@[m [mimport * as SurveyActions from '../actions/SurveyActions';[m
 import * as GeneralActions from '../actions/GeneralActions';[m
 import * as HomeActions from '../actions/HomeActions';[m
 import * as Style from '../constants/Style';[m
[31m-import CheckBoxList from 'react-checkbox-list';[m
[31m-import _ from 'lodash';[m
[31m-import RadioGroup from 'react-radio';[m
 [m
[31m-var RES_VALUES = [];[m
 export class Survey extends Component {[m
   static propTypes = {[m
     // Available survey questions[m
[31m-[m
     survey: PropTypes.object.isRequired,[m
     surveyActions: PropTypes.object.isRequired,[m
     generalActions: PropTypes.object.isRequired[m
[36m@@ -34,29 +29,7 @@[m [mexport class Survey extends Component {[m
 [m
   totalQuestions() {[m
     return this.props.survey.answeredQuestions.length +[m
[31m-      this.props.survey.questions.length;[m
[31m-  }[m
[31m-[m
[31m-  saveList (values) {[m
[31m-    console.log("values::",values);[m
[31m-    RES_VALUES = _.map(values, (x) => {[m
[31m-      return {[m
[31m-        value: x[m
[31m-      }[m
[31m-    });[m
[31m-  }[m
[31m-[m
[31m-  saveListForRadioButton(value) {[m
[31m-    console.log("value in saveListForRadioButton::", value);[m
[31m-    RES_VALUES = [];[m
[31m-    RES_VALUES.push({value: value});[m
[31m-  }[m
[31m-[m
[31m-  sendResponse(values) {[m
[31m-    console.log("Final Values in sendResponse in survey JSx:", values);[m
[31m-    this.props.surveyActions.answerQuestion(values);[m
[31m-    RES_VALUES = [];[m
[31m-    this.refs.respValues.reset();[m
[32m+[m[32m           this.props.survey.questions.length;[m
   }[m
 [m
   render() {[m
[36m@@ -68,76 +41,25 @@[m [mexport class Survey extends Component {[m
     }[m
 [m
     var currentQuestion = survey.questions[0].question;[m
[31m-    var data = [];[m
[31m-    currentQuestion.responses.map((response, index) => {[m
[31m-      data.push({value: (response.value).toString(), label: response.text})[m
[32m+[m[32m    var answerButtons = currentQuestion.responses.map((response, index) => {[m
[32m+[m[32m      let value = response.value;[m
[32m+[m[32m      return <div>[m
[32m+[m[32m             <button key={index}[m
[32m+[m[32m                     style={Style.primaryButton}[m
[32m+[m[32m                     onClick={() => surveyActions.answerQuestion(value)}>{response.text}</button>[m
[32m+[m[32m            </div>[m
     });[m
[31m-    console.log("data:", data);[m
[31m-    console.log("GLOBAL RESP:", RES_VALUES);[m
[31m-[m
[31m-    var questionType = currentQuestion.questionType;[m
[31m-    var defaultValueForRadiobutton = currentQuestion.responses[0].value;[m
[31m-[m
[31m-    console.log("questionType::",questionType);[m
[31m-[m
[31m-    if (questionType === "checkbox") {[m
[31m-[m
[31m-      return ([m
[31m-        <div style={Style.CONTAINER_BASE}>[m
[31m-          <div style={Style.largeType}>{currentQuestion.title}</div>[m
[31m-          <div>[m
[31m-            <CheckBoxList defaultData={data}[m
[31m-                          onChange={this.saveList.bind(this)}[m
[31m-                          ref="respValues" />[m
 [m
[31m-          </div>[m
[31m-          <div>[m
[31m-            <button style={Style.primaryButton}[m
[31m-                    onClick={() => this.sendResponse(RES_VALUES)}[m
[31m-            >Next</button>[m
[31m-          </div>[m
[31m-          <div style={this.styles.outerBar}>[m
[31m-            <div style={::this.innerBarStyle()}></div>[m
[31m-          </div>[m
[31m-          <div style={Style.smallType}>{::this.answeredQuestions()} / {::this.totalQuestions()} Questions Answered</div>[m
[32m+[m[32m    return ([m
[32m+[m[32m      <div style={Style.CONTAINER_BASE}>[m
[32m+[m[32m        <div style={Style.largeType}>{currentQuestion.title}</div>[m
[32m+[m[32m        <div>{answerButtons}</div>[m
[32m+[m[32m        <div style={this.styles.outerBar}>[m
[32m+[m[32m          <div style={::this.innerBarStyle()}></div>[m
         </div>[m
[31m-      );[m
[31m-[m
[31m-    } else if (questionType === "radiobutton") {[m
[31m-[m
[31m-      var radioButtons = [];[m
[31m-      currentQuestion.responses.forEach((response, index) => {[m
[31m-[m
[31m-        radioButtons.push([m
[31m-          (<div>[m
[31m-            <input type="radio" value={response.value} />{response.text}[m
[31m-          </div>)[m
[31m-        );[m
[31m-      });[m
[31m-[m
[31m-      return ([m
[31m-        <div style={Style.CONTAINER_BASE}>[m
[31m-          <div style={Style.largeType}>{currentQuestion.title}</div>[m
[31m-          <div>[m
[31m-            <RadioGroup name="responseValues" value={defaultValueForRadiobutton} onChange={this.saveListForRadioButton}>[m
[31m-              {radioButtons}[m
[31m-            </RadioGroup>[m
[31m-          </div>[m
[31m-          <div>[m
[31m-            <button style={Style.primaryButton}[m
[31m-                    onClick={() => this.sendResponse(RES_VALUES)}[m
[31m-            >Next</button>[m
[31m-          </div>[m
[31m-          <div style={this.styles.outerBar}>[m
[31m-            <div style={::this.innerBarStyle()}></div>[m
[31m-          </div>[m
[31m-          <div style={Style.smallType}>{::this.answeredQuestions()} / {::this.totalQuestions()} Questions Answered</div>[m
[31m-        </div>[m
[31m-      );[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-[m
[32m+[m[32m        <div style={Style.smallType}>{::this.answeredQuestions()} / {::this.totalQuestions()} Questions Answered</div>[m
[32m+[m[32m      </div>[m
[32m+[m[32m    );[m
   }[m
 [m
   /**[m
[36m@@ -173,3 +95,5 @@[m [mexport default connect(state => ({[m
   generalActions: bindActionCreators(GeneralActions, dispatch),[m
   homeActions: bindActionCreators(HomeActions, dispatch)[m
 }))(Survey);[m
[41m+[m
[41m+[m
